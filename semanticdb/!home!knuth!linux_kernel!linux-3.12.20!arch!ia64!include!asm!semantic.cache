;; Object asm/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "asm/"
  :tables
  (list
    (semanticdb-table "atomic.h"
      :major-mode 'c-mode
      :tags 
        '( ("_ASM_IA64_ATOMIC_H" variable (:constant-flag t) nil [36 54])
            ("linux/types.h" include (:system-flag t) nil [413 437])
            ("asm/intrinsics.h" include (:system-flag t) nil [439 466])
            ("ATOMIC_INIT" variable (:constant-flag t) nil [477 488])
            ("ATOMIC64_INIT" variable (:constant-flag t) nil [509 522])
            ("atomic_read" variable (:constant-flag t) nil [543 554])
            ("atomic64_read" variable (:constant-flag t) nil [600 613])
            ("atomic_set" variable (:constant-flag t) nil [660 670])
            ("atomic64_set" variable (:constant-flag t) nil [708 720])
            ("ia64_atomic_add" function
               (:arguments 
                  ( ("i" variable (:type "int") (reparse-symbol arg-sub-list) [789 795])
                    ("v" variable
                       (:pointer 1
                        :type ("atomic_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [796 808]))                  
                :type "int")
                nil [768 1004])
            ("ia64_atomic64_add" function
               (:arguments 
                  ( ("i" variable (:type ("__s64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1048 1056])
                    ("v" variable
                       (:pointer 1
                        :type ("atomic64_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1057 1071]))                  
                :type "long")
                nil [1024 1271])
            ("ia64_atomic_sub" function
               (:arguments 
                  ( ("i" variable (:type "int") (reparse-symbol arg-sub-list) [1312 1318])
                    ("v" variable
                       (:pointer 1
                        :type ("atomic_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1319 1331]))                  
                :type "int")
                nil [1291 1527])
            ("ia64_atomic64_sub" function
               (:arguments 
                  ( ("i" variable (:type ("__s64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1571 1579])
                    ("v" variable
                       (:pointer 1
                        :type ("atomic64_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1580 1594]))                  
                :type "long")
                nil [1547 1794])
            ("atomic_cmpxchg" variable (:constant-flag t) nil [1804 1818])
            ("atomic_xchg" variable (:constant-flag t) nil [1877 1888])
            ("atomic64_cmpxchg" variable (:constant-flag t) nil [1935 1951])
            ("atomic64_xchg" variable (:constant-flag t) nil [2013 2026])
            ("__atomic_add_unless" function
               (:arguments 
                  ( ("v" variable
                       (:pointer 1
                        :type ("atomic_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2107 2119])
                    ("a" variable (:type "int") (reparse-symbol arg-sub-list) [2120 2126])
                    ("u" variable (:type "int") (reparse-symbol arg-sub-list) [2127 2133]))                  
                :type "int")
                nil [2083 2319])
            ("atomic64_add_unless" function
               (:arguments 
                  ( ("v" variable
                       (:pointer 1
                        :type ("atomic64_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2365 2379])
                    ("a" variable (:type "long") (reparse-symbol arg-sub-list) [2380 2387])
                    ("u" variable (:type "long") (reparse-symbol arg-sub-list) [2388 2395]))                  
                :type "long")
                nil [2340 2593])
            ("atomic64_inc_not_zero" variable (:constant-flag t) nil [2603 2624])
            ("atomic_add_return" variable (:constant-flag t) nil [2668 2685])
            ("atomic64_add_return" variable (:constant-flag t) nil [3117 3136])
            ("atomic_add_negative" function
               (:arguments 
                  ( ("i" variable (:type "int") (reparse-symbol arg-sub-list) [3691 3697])
                    ("v" variable
                       (:pointer 1
                        :type ("atomic_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3698 3710]))                  
                :type "int")
                nil [3666 3751])
            ("atomic64_add_negative" function
               (:arguments 
                  ( ("i" variable (:type ("__s64" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3799 3807])
                    ("v" variable
                       (:pointer 1
                        :type ("atomic64_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3808 3822]))                  
                :type "long")
                nil [3771 3865])
            ("atomic_sub_return" variable (:constant-flag t) nil [3875 3892])
            ("atomic64_sub_return" variable (:constant-flag t) nil [4328 4347])
            ("atomic_dec_return" variable (:constant-flag t) nil [4784 4801])
            ("atomic_inc_return" variable (:constant-flag t) nil [4840 4857])
            ("atomic64_dec_return" variable (:constant-flag t) nil [4896 4915])
            ("atomic64_inc_return" variable (:constant-flag t) nil [4956 4975])
            ("atomic_sub_and_test" variable (:constant-flag t) nil [5017 5036])
            ("atomic_dec_and_test" variable (:constant-flag t) nil [5085 5104])
            ("atomic_inc_and_test" variable (:constant-flag t) nil [5150 5169])
            ("atomic64_sub_and_test" variable (:constant-flag t) nil [5215 5236])
            ("atomic64_dec_and_test" variable (:constant-flag t) nil [5287 5308])
            ("atomic64_inc_and_test" variable (:constant-flag t) nil [5355 5376])
            ("atomic_add" variable (:constant-flag t) nil [5424 5434])
            ("atomic_sub" variable (:constant-flag t) nil [5478 5488])
            ("atomic_inc" variable (:constant-flag t) nil [5532 5542])
            ("atomic_dec" variable (:constant-flag t) nil [5575 5585])
            ("atomic64_add" variable (:constant-flag t) nil [5619 5631])
            ("atomic64_sub" variable (:constant-flag t) nil [5676 5688])
            ("atomic64_inc" variable (:constant-flag t) nil [5733 5745])
            ("atomic64_dec" variable (:constant-flag t) nil [5780 5792])
            ("smp_mb__before_atomic_dec" variable (:constant-flag t) nil [5876 5901])
            ("smp_mb__after_atomic_dec" variable (:constant-flag t) nil [5922 5946])
            ("smp_mb__before_atomic_inc" variable (:constant-flag t) nil [5967 5992])
            ("smp_mb__after_atomic_inc" variable (:constant-flag t) nil [6013 6037]))          
      :file "atomic.h"
      :pointmax 6083
      :fsize 6082
      :lastmodtime '(21976 3065 768725 639000)
      :unmatched-syntax '((symbol 3760 . 3770) (STATIC 3753 . 3759) (symbol 3655 . 3665) (STATIC 3648 . 3654) (symbol 2329 . 2339) (STATIC 2322 . 2328) (symbol 2072 . 2082) (STATIC 2065 . 2071) (symbol 1536 . 1546) (STATIC 1529 . 1535) (symbol 1280 . 1290) (STATIC 1273 . 1279) (symbol 1013 . 1023) (STATIC 1006 . 1012) (symbol 757 . 767) (STATIC 750 . 756))
      :lexical-table 
        '(("_ASM_IA64_ATOMIC_H")
          ("atomic64_sub_and_test" (spp-arg-list ("i" "v") 5236 . 5241) . ((semantic-list "(atomic64_sub_return((i), (v)) == 0)" 5242 . 5278)))
          ("atomic64_dec_and_test" (spp-arg-list ("v") 5308 . 5311) . ((semantic-list "(atomic64_sub_return(1, (v)) == 0)" 5312 . 5346)))
          ("atomic64_cmpxchg" (spp-arg-list ("v" "old" "new") 1951 . 1964) . ((semantic-list "(cmpxchg(&((v)->counter), old, new))" 1968 . 2004)))
          ("atomic64_xchg" (spp-arg-list ("v" "new") 2026 . 2034) . ((semantic-list "(xchg(&((v)->counter), new))" 2035 . 2063)))
          ("atomic64_sub_return" (spp-arg-list ("i" "v") 4347 . 4352) . ((semantic-list "({									\\
	long __ia64_asr_i = (i);					\\
	(__builtin_constant_p(i)					\\
	 && (   (__ia64_asr_i ==   1) || (__ia64_asr_i ==   4)		\\
	     || (__ia64_asr_i ==   8) || (__ia64_asr_i ==  16)		\\
	     || (__ia64_asr_i ==  -1) || (__ia64_asr_i ==  -4)		\\
	     || (__ia64_asr_i ==  -8) || (__ia64_asr_i == -16)))	\\
		? ia64_fetch_and_add(-__ia64_asr_i, &(v)->counter)	\\
		: ia64_atomic64_sub(__ia64_asr_i, v);			\\
})" 4359 . 4774)))
          ("atomic64_dec_return" (spp-arg-list ("v") 4915 . 4918) . ((symbol "atomic64_sub_return" 4920 . 4939) (semantic-list "(1, (v))" 4939 . 4947)))
          ("smp_mb__before_atomic_inc" (spp-arg-list nil 5992 . 5994) . ((symbol "barrier" 5995 . 6002) (semantic-list "()" 6002 . 6004)))
          ("atomic64_read" (spp-arg-list ("v") 613 . 616) . ((semantic-list "(*(volatile long *)&(v)->counter)" 617 . 650)))
          ("atomic_inc_return" (spp-arg-list ("v") 4857 . 4860) . ((symbol "atomic_add_return" 4862 . 4879) (semantic-list "(1, (v))" 4879 . 4887)))
          ("atomic64_inc" (spp-arg-list ("v") 5745 . 5748) . ((symbol "atomic64_add" 5751 . 5763) (semantic-list "(1, (v))" 5763 . 5771)))
          ("smp_mb__after_atomic_dec" (spp-arg-list nil 5946 . 5948) . ((symbol "barrier" 5949 . 5956) (semantic-list "()" 5956 . 5958)))
          ("ATOMIC64_INIT" (spp-arg-list ("i") 522 . 525) . ((semantic-list "{ (i) }" 526 . 533)))
          ("atomic64_set" (spp-arg-list ("v" "i") 720 . 725) . ((semantic-list "(((v)->counter) = (i))" 726 . 748)))
          ("atomic_inc" (spp-arg-list ("v") 5542 . 5545) . ((symbol "atomic_add" 5548 . 5558) (semantic-list "(1, (v))" 5558 . 5566)))
          ("atomic64_add_return" (spp-arg-list ("i" "v") 3136 . 3141) . ((semantic-list "({									\\
	long __ia64_aar_i = (i);					\\
	(__builtin_constant_p(i)					\\
	 && (   (__ia64_aar_i ==  1) || (__ia64_aar_i ==   4)		\\
	     || (__ia64_aar_i ==  8) || (__ia64_aar_i ==  16)		\\
	     || (__ia64_aar_i == -1) || (__ia64_aar_i ==  -4)		\\
	     || (__ia64_aar_i == -8) || (__ia64_aar_i == -16)))		\\
		? ia64_fetch_and_add(__ia64_aar_i, &(v)->counter)	\\
		: ia64_atomic64_add(__ia64_aar_i, v);			\\
})" 3148 . 3559)))
          ("atomic_inc_and_test" (spp-arg-list ("v") 5169 . 5172) . ((semantic-list "(atomic_add_return(1, (v)) == 0)" 5174 . 5206)))
          ("atomic64_add" (spp-arg-list ("i" "v") 5631 . 5636) . ((symbol "atomic64_add_return" 5638 . 5657) (semantic-list "((i), (v))" 5657 . 5667)))
          ("atomic_set" (spp-arg-list ("v" "i") 670 . 675) . ((semantic-list "(((v)->counter) = (i))" 677 . 699)))
          ("atomic_cmpxchg" (spp-arg-list ("v" "old" "new") 1818 . 1831) . ((semantic-list "(cmpxchg(&((v)->counter), old, new))" 1832 . 1868)))
          ("atomic_xchg" (spp-arg-list ("v" "new") 1888 . 1896) . ((semantic-list "(xchg(&((v)->counter), new))" 1897 . 1925)))
          ("atomic64_inc_not_zero" (spp-arg-list ("v") 2624 . 2627) . ((symbol "atomic64_add_unless" 2628 . 2647) (semantic-list "((v), 1, 0)" 2647 . 2658)))
          ("atomic_sub_return" (spp-arg-list ("i" "v") 3892 . 3897) . ((semantic-list "({									\\
	int __ia64_asr_i = (i);						\\
	(__builtin_constant_p(i)					\\
	 && (   (__ia64_asr_i ==   1) || (__ia64_asr_i ==   4)		\\
	     || (__ia64_asr_i ==   8) || (__ia64_asr_i ==  16)		\\
	     || (__ia64_asr_i ==  -1) || (__ia64_asr_i ==  -4)		\\
	     || (__ia64_asr_i ==  -8) || (__ia64_asr_i == -16)))	\\
		? ia64_fetch_and_add(-__ia64_asr_i, &(v)->counter)	\\
		: ia64_atomic_sub(__ia64_asr_i, v);			\\
})" 3905 . 4318)))
          ("atomic_dec_return" (spp-arg-list ("v") 4801 . 4804) . ((symbol "atomic_sub_return" 4806 . 4823) (semantic-list "(1, (v))" 4823 . 4831)))
          ("atomic64_inc_and_test" (spp-arg-list ("v") 5376 . 5379) . ((semantic-list "(atomic64_add_return(1, (v)) == 0)" 5380 . 5414)))
          ("atomic_add" (spp-arg-list ("i" "v") 5434 . 5439) . ((symbol "atomic_add_return" 5442 . 5459) (semantic-list "((i), (v))" 5459 . 5469)))
          ("smp_mb__before_atomic_dec" (spp-arg-list nil 5901 . 5903) . ((symbol "barrier" 5904 . 5911) (semantic-list "()" 5911 . 5913)))
          ("atomic_read" (spp-arg-list ("v") 554 . 557) . ((semantic-list "(*(volatile int *)&(v)->counter)" 559 . 591)))
          ("atomic64_sub" (spp-arg-list ("i" "v") 5688 . 5693) . ((symbol "atomic64_sub_return" 5695 . 5714) (semantic-list "((i), (v))" 5714 . 5724)))
          ("atomic64_dec" (spp-arg-list ("v") 5792 . 5795) . ((symbol "atomic64_sub" 5798 . 5810) (semantic-list "(1, (v))" 5810 . 5818)))
          ("atomic64_inc_return" (spp-arg-list ("v") 4975 . 4978) . ((symbol "atomic64_add_return" 4980 . 4999) (semantic-list "(1, (v))" 4999 . 5007)))
          ("smp_mb__after_atomic_inc" (spp-arg-list nil 6037 . 6039) . ((symbol "barrier" 6040 . 6047) (semantic-list "()" 6047 . 6049)))
          ("ATOMIC_INIT" (spp-arg-list ("i") 488 . 491) . ((semantic-list "{ (i) }" 493 . 500)))
          ("atomic_sub" (spp-arg-list ("i" "v") 5488 . 5493) . ((symbol "atomic_sub_return" 5496 . 5513) (semantic-list "((i), (v))" 5513 . 5523)))
          ("atomic_dec" (spp-arg-list ("v") 5585 . 5588) . ((symbol "atomic_sub" 5591 . 5601) (semantic-list "(1, (v))" 5601 . 5609)))
          ("atomic_add_return" (spp-arg-list ("i" "v") 2685 . 2690) . ((semantic-list "({									\\
	int __ia64_aar_i = (i);						\\
	(__builtin_constant_p(i)					\\
	 && (   (__ia64_aar_i ==  1) || (__ia64_aar_i ==   4)		\\
	     || (__ia64_aar_i ==  8) || (__ia64_aar_i ==  16)		\\
	     || (__ia64_aar_i == -1) || (__ia64_aar_i ==  -4)		\\
	     || (__ia64_aar_i == -8) || (__ia64_aar_i == -16)))		\\
		? ia64_fetch_and_add(__ia64_aar_i, &(v)->counter)	\\
		: ia64_atomic_add(__ia64_aar_i, v);			\\
})" 2698 . 3107)))
          ("atomic_sub_and_test" (spp-arg-list ("i" "v") 5036 . 5041) . ((semantic-list "(atomic_sub_return((i), (v)) == 0)" 5042 . 5076)))
          ("atomic_dec_and_test" (spp-arg-list ("v") 5104 . 5107) . ((semantic-list "(atomic_sub_return(1, (v)) == 0)" 5109 . 5141)))
          )
)
    (semanticdb-table "page.h"
      :major-mode 'c-mode
      :tags 
        '( ("_ASM_IA64_PAGE_H" variable (:constant-flag t) nil [34 50])
            ("asm/intrinsics.h" include (:system-flag t) nil [187 214])
            ("asm/types.h" include (:system-flag t) nil [215 237])
            ("RGN_SHIFT" variable (:constant-flag t) nil [375 384])
            ("RGN_BASE" variable (:constant-flag t) nil [398 406])
            ("RGN_BITS" variable (:constant-flag t) nil [450 458])
            ("RGN_KERNEL" variable (:constant-flag t) nil [483 493])
            ("RGN_UNCACHED" variable (:constant-flag t) nil [533 545])
            ("RGN_GATE" variable (:constant-flag t) nil [592 600])
            ("RGN_HPAGE" variable (:constant-flag t) nil [645 654])
            ("PAGE_SIZE" variable (:constant-flag t) nil [1053 1062])
            ("PAGE_MASK" variable (:constant-flag t) nil [1107 1116])
            ("PERCPU_PAGE_SHIFT" variable (:constant-flag t) nil [1146 1163])
            ("PERCPU_PAGE_SIZE" variable (:constant-flag t) nil [1217 1233])
            ("STRICT_MM_TYPECHECKS" variable (:constant-flag t) nil [1775 1795])
            ("clear_page" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("page" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [1821 1832]))                  
                :type "void")
                nil [1797 1833])
            ("copy_page" function
               (:prototype-flag t
                :typemodifiers ("extern")
                :arguments 
                  ( ("to" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [1857 1866])
                    ("from" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [1867 1878]))                  
                :type "void")
                nil [1834 1879])
            ("clear_user_page" variable (:constant-flag t) nil [2027 2042])
            ("copy_user_page" variable (:constant-flag t) nil [2149 2163])
            ("__alloc_zeroed_user_highpage" variable (:constant-flag t) nil [2281 2309])
            ("__HAVE_ARCH_ALLOC_ZEROED_USER_HIGHPAGE" variable (:constant-flag t) nil [2533 2571])
            ("virt_addr_valid" variable (:constant-flag t) nil [2581 2596])
            ("ia64_pfn_valid" variable (:constant-flag t) nil [2734 2748])
            ("asm-generic/memory_model.h" include (:system-flag t) nil [3017 3055])
            ("page_to_phys" variable (:constant-flag t) nil [3373 3385])
            ("virt_to_page" variable (:constant-flag t) nil [3434 3446])
            ("pfn_to_kaddr" variable (:constant-flag t) nil [3501 3513])
            ("ia64_va" type
               (:members 
                  ( ("f" variable (:type ("" type
                         (:members 
                            ( ("off" variable
                                 (:suffix ":61"
                                  :type "unsigned long")
                                  (reparse-symbol classsubparts) [3582 3605])
                              ("reg" variable
                                 (:suffix ":3"
                                  :type "unsigned long")
                                  (reparse-symbol classsubparts) [3635 3658]))                            
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [3571 3685])
                    ("l" variable (:type "unsigned long") (reparse-symbol classsubparts) [3687 3703])
                    ("p" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol classsubparts) [3705 3713]))                  
                :type "union")
                nil [3546 3724])
            ("ia64_va" type
               (:typedef ("ia64_va" type (:type "union") nil nil)
                :type "typedef")
                nil [3546 3724])
            ("__pa" variable (:constant-flag t) nil [3954 3958])
            ("__va" variable (:constant-flag t) nil [4026 4030])
            ("REGION_NUMBER" variable (:constant-flag t) nil [4100 4113])
            ("REGION_OFFSET" variable (:constant-flag t) nil [4170 4183])
            ("get_order" function
               (:arguments 
                  ( ("size" variable (:type "unsigned long") (reparse-symbol arg-sub-list) [4519 4538]))                  
                :type "int")
                nil [4504 4696])
            ("pte_t" type
               (:typedef ("" type
                     (:members 
                        ( ("pte" variable (:type "unsigned long") (reparse-symbol classsubparts) [4837 4855]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [4820 4864])
            ("pmd_t" type
               (:typedef ("" type
                     (:members 
                        ( ("pmd" variable (:type "unsigned long") (reparse-symbol classsubparts) [4884 4902]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [4867 4911])
            ("pgd_t" type
               (:typedef ("" type
                     (:members 
                        ( ("pgd" variable (:type "unsigned long") (reparse-symbol classsubparts) [5009 5027]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [4992 5036])
            ("pgprot_t" type
               (:typedef ("" type
                     (:members 
                        ( ("pgprot" variable (:type "unsigned long") (reparse-symbol classsubparts) [5056 5077]))                        
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [5039 5089])
            ("pgtable_t" type
               (:typedef ("page" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :pointer 1
                :type "typedef")
                nil [5092 5123])
            ("pte_val" variable (:constant-flag t) nil [5134 5141])
            ("pmd_val" variable (:constant-flag t) nil [5164 5171])
            ("pgd_val" variable (:constant-flag t) nil [5255 5262])
            ("pgprot_val" variable (:constant-flag t) nil [5285 5295])
            ("__pte" variable (:constant-flag t) nil [5322 5327])
            ("__pmd" variable (:constant-flag t) nil [5359 5364])
            ("__pgprot" variable (:constant-flag t) nil [5396 5404])
            ("PAGE_OFFSET" variable (:constant-flag t) nil [5942 5953])
            ("VM_DATA_DEFAULT_FLAGS" variable (:constant-flag t) nil [5986 6007])
            ("GATE_ADDR" variable (:constant-flag t) nil [6177 6186])
            ("KERNEL_START" variable (:constant-flag t) nil [6336 6348])
            ("PERCPU_ADDR" variable (:constant-flag t) nil [6400 6411])
            ("LOAD_OFFSET" variable (:constant-flag t) nil [6441 6452]))          
      :file "page.h"
      :pointmax 6522
      :fsize 6521
      :lastmodtime '(21976 3065 772725 638000)
      :unmatched-syntax '((symbol 4493 . 4503) (STATIC 4486 . 4492) (punctuation 1035 . 1036) (symbol 1031 . 1035) (symbol 1026 . 1030) (symbol 1014 . 1025) (symbol 1008 . 1013) (punctuation 1006 . 1007))
      :lexical-table 
        '(("PERCPU_ADDR" . ((semantic-list "(-PERCPU_PAGE_SIZE)" 6413 . 6432)))
          ("RGN_UNCACHED" . ((number "6" 549 . 550)))
          ("PERCPU_PAGE_SIZE" . ((semantic-list "(__IA64_UL_CONST(1) << PERCPU_PAGE_SHIFT)" 1234 . 1275)))
          ("STRICT_MM_TYPECHECKS")
          ("ia64_pfn_valid" (spp-arg-list ("pfn") 2748 . 2753) . ((number "1" 2754 . 2755)))
          ("__alloc_zeroed_user_highpage" (spp-arg-list ("movableflags" "vma" "vaddr") 2309 . 2335) . ((semantic-list "({									\\
	struct page *page = alloc_page_vma(				\\
		GFP_HIGHUSER | __GFP_ZERO | movableflags, vma, vaddr);	\\
	if (page)							\\
 		flush_dcache_page(page);				\\
	page;								\\
})" 2339 . 2523)))
          ("REGION_OFFSET" (spp-arg-list ("x") 4183 . 4186) . ((semantic-list "({ia64_va _v; _v.l = (long) (x); _v.f.off;})" 4187 . 4231)))
          ("__pte" (spp-arg-list ("x") 5327 . 5330) . ((semantic-list "((pte_t) { (x) } )" 5331 . 5349)))
          ("RGN_HPAGE" . ((number "4" 655 . 656)))
          ("PAGE_MASK" . ((semantic-list "(~(PAGE_SIZE - 1))" 1118 . 1136)))
          ("__HAVE_ARCH_ALLOC_ZEROED_USER_HIGHPAGE")
          ("__pa" (spp-arg-list ("x") 3958 . 3961) . ((semantic-list "({ia64_va _v; _v.l = (long) (x); _v.f.reg = 0; _v.l;})" 3963 . 4017)))
          ("VM_DATA_DEFAULT_FLAGS" . ((semantic-list "(VM_READ | VM_WRITE |					\\
					 VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC |		\\
					 (((current->personality & READ_IMPLIES_EXEC) != 0)	\\
					  ? VM_EXEC : 0))" 6009 . 6167)))
          ("GATE_ADDR" . ((symbol "RGN_BASE" 6188 . 6196) (semantic-list "(RGN_GATE)" 6196 . 6206)))
          ("RGN_GATE" . ((number "5" 601 . 602)))
          ("PERCPU_PAGE_SHIFT" . ((number "18" 1164 . 1166)))
          ("clear_user_page" (spp-arg-list ("addr" "vaddr" "page") 2042 . 2061) . 
              ((DO "do" 2064 . 2066) (semantic-list "{						\\
	clear_page(addr);			\\
	flush_dcache_page(page);		\\
}" 2067 . 2129) (WHILE "while" 2130 . 2135) (semantic-list "(0)" 2136 . 2139)))
          ("PAGE_SIZE" . ((semantic-list "(__IA64_UL_CONST(1) << PAGE_SHIFT)" 1064 . 1098)))
          ("REGION_NUMBER" (spp-arg-list ("x") 4113 . 4116) . ((semantic-list "({ia64_va _v; _v.l = (long) (x); _v.f.reg;})" 4117 . 4161)))
          ("copy_user_page" (spp-arg-list ("to" "from" "vaddr" "page") 2163 . 2186) . 
              ((DO "do" 2189 . 2191) (semantic-list "{						\\
	copy_page((to), (from));		\\
	flush_dcache_page(page);		\\
}" 2192 . 2260) (WHILE "while" 2261 . 2266) (semantic-list "(0)" 2267 . 2270)))
          ("virt_addr_valid" (spp-arg-list ("kaddr") 2596 . 2603) . ((symbol "pfn_valid" 2604 . 2613) (semantic-list "(__pa(kaddr) >> PAGE_SHIFT)" 2613 . 2640)))
          ("pfn_to_kaddr" (spp-arg-list ("pfn") 3513 . 3518) . ((symbol "__va" 3519 . 3523) (semantic-list "((pfn) << PAGE_SHIFT)" 3523 . 3544)))
          ("__pmd" (spp-arg-list ("x") 5364 . 5367) . ((semantic-list "((pmd_t) { (x) } )" 5368 . 5386)))
          ("__pgprot" (spp-arg-list ("x") 5404 . 5407) . ((semantic-list "((pgprot_t) { (x) } )" 5408 . 5429)))
          ("RGN_BITS" . ((semantic-list "(RGN_BASE(-1))" 459 . 473)))
          ("RGN_KERNEL" . ((number "7" 494 . 495)))
          ("pgd_val" (spp-arg-list ("x") 5262 . 5265) . ((semantic-list "((x).pgd)" 5266 . 5275)))
          ("KERNEL_START" . ((semantic-list "(GATE_ADDR+__IA64_UL_CONST(0x100000000))" 6351 . 6391)))
          ("LOAD_OFFSET" . ((semantic-list "(KERNEL_START - KERNEL_TR_PAGE_SIZE)" 6454 . 6490)))
          ("RGN_SHIFT" . ((semantic-list "(61)" 385 . 389)))
          ("page_to_phys" (spp-arg-list ("page") 3385 . 3391) . ((semantic-list "(page_to_pfn(page) << PAGE_SHIFT)" 3392 . 3425)))
          ("__va" (spp-arg-list ("x") 4030 . 4033) . ((semantic-list "({ia64_va _v; _v.l = (long) (x); _v.f.reg = -1; _v.p;})" 4035 . 4090)))
          ("_ASM_IA64_PAGE_H")
          ("RGN_BASE" (spp-arg-list ("r") 406 . 409) . ((semantic-list "(__IA64_UL_CONST(r)<<RGN_SHIFT)" 410 . 441)))
          ("pmd_val" (spp-arg-list ("x") 5171 . 5174) . ((semantic-list "((x).pmd)" 5175 . 5184)))
          ("pgprot_val" (spp-arg-list ("x") 5295 . 5298) . ((semantic-list "((x).pgprot)" 5299 . 5311)))
          ("virt_to_page" (spp-arg-list ("kaddr") 3446 . 3453) . ((symbol "pfn_to_page" 3454 . 3465) (semantic-list "(__pa(kaddr) >> PAGE_SHIFT)" 3465 . 3492)))
          ("pte_val" (spp-arg-list ("x") 5141 . 5144) . ((semantic-list "((x).pte)" 5145 . 5154)))
          ("PAGE_OFFSET" . ((symbol "RGN_BASE" 5956 . 5964) (semantic-list "(RGN_KERNEL)" 5964 . 5976)))
          )
))
  :file "!home!knuth!linux_kernel!linux-3.12.20!arch!ia64!include!asm!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
